# Ajusta automaticamente workers conforme CPUs disponíveis
worker_processes auto;

events {
    # Máximo de conexões simultâneas por worker
    worker_connections 1024;
}

http {
    # Define tipos MIME para arquivos estáticos
    include       mime.types;
    default_type  application/octet-stream;

    # Envio eficiente de arquivos via kernel (zero copy)
    sendfile        on;
    # Para arquivos estáticos: agrupa envio de pacotes
    tcp_nopush      on;
    # Para dados dinâmicos: evita buffering desnecessário
    tcp_nodelay     on;

    # Tempo de keep-alive (manter conexão aberta)
    keepalive_timeout  65;

    # Tamanho máximo permitido para uploads (ajuste conforme necessidade)
    client_max_body_size 10m;

    # Proxy buffers: melhoram performance em respostas grandes
    proxy_buffer_size           16k;
    proxy_buffers               4 32k;
    proxy_busy_buffers_size     64k;

    # Mapeia cabeçalhos de upgrade para WebSocket
    map $http_upgrade $connection_upgrade {
        default   upgrade;
        ''        close;
    }
    server {
        # Porta HTTP padrão
        listen       80;
        # Nome do servidor (ajuste para domínio real em produção)
        server_name  localhost;



        # Pasta raiz dos arquivos estáticos gerados no build do frontend
        root   /usr/share/nginx/html;
        # Arquivo inicial padrão
        index  index.html;

        # ------------------------------------------------------------
        # Rota principal da SPA:
        # Tenta servir arquivo estático; se não existir, retorna index.html
        # ------------------------------------------------------------
        location / {
            try_files $uri $uri/ /index.html;
        }

        # ------------------------------------------------------------
        # Proxy para a API backend
        # ------------------------------------------------------------
        location /api/ {
            proxy_pass         http://backend:8080;
            proxy_http_version 1.1;

            # Preserva cabeçalhos de origem
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header X-XSRF-TOKEN $http_x_csrf_token;
            proxy_set_header Cookie $http_cookie;

            #repassa cookies e header CSRF
            add_header Access-Control-Allow-Origin http://127.0.0.1 always;
            add_header Access-Control-Allow-Credentials true always;            
            # Tempo máximo de espera pela resposta do backend
            proxy_read_timeout 60s;
        }

        # ------------------------------------------------------------
        # Tratamento de erros
        # ------------------------------------------------------------
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }
    }